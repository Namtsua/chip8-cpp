#include "constants.hpp"

class CPU
{
	public:
		uint8_t memory[Constants::MEMORY_SIZE]; // Chip 8 has 4k of memory
		uint8_t gfx[Constants::SCREEN_WIDTH * Constants::SCREEN_HEIGHT]; // Chip 8 screen size is usually 64 * 32
		uint8_t key[16];
		void initialize();
		void cycle();
		const bool& getDrawFlag() const;
		void setDrawFlag(const bool& state);
		
	private:
		uint8_t registers[Constants::REGISTER_COUNT]; // 16 8-bit registers (last is flag)
		uint16_t I; // Index register
		uint16_t pc; // Program Counter
		uint16_t sp; // Stack Pointer
		uint16_t opcode;
		uint16_t stack[Constants::STACK_SIZE];
		uint8_t delay_timer;
		uint8_t sound_timer;
		bool draw_flag;
		const char* beep_mp3 = "./sounds/beep.ogg";
		SDL_AudioSpec wavSpec;
		Uint32 wavLength;
		Uint8 *wavBuffer;
		SDL_AudioDeviceID deviceId;
		unsigned char fontset[Constants::FONT_COUNT] =
		{
			0xF0, 0x90, 0x90, 0x90, 0xF0, // 0
			0x20, 0x60, 0x20, 0x20, 0x70, // 1
			0xF0, 0x10, 0xF0, 0x80, 0xF0, // 2
			0xF0, 0x10, 0xF0, 0x10, 0xF0, // 3
			0x90, 0x90, 0xF0, 0x10, 0x10, // 4
			0xF0, 0x80, 0xF0, 0x10, 0xF0, // 5
			0xF0, 0x80, 0xF0, 0x90, 0xF0, // 6
			0xF0, 0x10, 0x20, 0x40, 0x40, // 7
			0xF0, 0x90, 0xF0, 0x90, 0xF0, // 8
			0xF0, 0x90, 0xF0, 0x10, 0xF0, // 9
			0xF0, 0x90, 0xF0, 0x90, 0x90, // A
			0xE0, 0x90, 0xE0, 0x90, 0xE0, // B
			0xF0, 0x80, 0x80, 0x80, 0xF0, // C
			0xE0, 0x90, 0x90, 0x90, 0xE0, // D
			0xF0, 0x80, 0xF0, 0x80, 0xF0, // E
			0xF0, 0x80, 0xF0, 0x80, 0x80  // F
		};
};